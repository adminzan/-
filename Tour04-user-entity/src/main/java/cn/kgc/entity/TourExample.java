package cn.kgc.entity;

import java.util.ArrayList;
import java.util.List;

public class TourExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table tour
     *
     * @mbg.generated Fri Aug 07 22:45:15 CST 2020
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table tour
     *
     * @mbg.generated Fri Aug 07 22:45:15 CST 2020
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table tour
     *
     * @mbg.generated Fri Aug 07 22:45:15 CST 2020
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tour
     *
     * @mbg.generated Fri Aug 07 22:45:15 CST 2020
     */
    public TourExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tour
     *
     * @mbg.generated Fri Aug 07 22:45:15 CST 2020
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tour
     *
     * @mbg.generated Fri Aug 07 22:45:15 CST 2020
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tour
     *
     * @mbg.generated Fri Aug 07 22:45:15 CST 2020
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tour
     *
     * @mbg.generated Fri Aug 07 22:45:15 CST 2020
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tour
     *
     * @mbg.generated Fri Aug 07 22:45:15 CST 2020
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tour
     *
     * @mbg.generated Fri Aug 07 22:45:15 CST 2020
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tour
     *
     * @mbg.generated Fri Aug 07 22:45:15 CST 2020
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tour
     *
     * @mbg.generated Fri Aug 07 22:45:15 CST 2020
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tour
     *
     * @mbg.generated Fri Aug 07 22:45:15 CST 2020
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tour
     *
     * @mbg.generated Fri Aug 07 22:45:15 CST 2020
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table tour
     *
     * @mbg.generated Fri Aug 07 22:45:15 CST 2020
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andNameIsNull() {
            addCriterion("name is null");
            return (Criteria) this;
        }

        public Criteria andNameIsNotNull() {
            addCriterion("name is not null");
            return (Criteria) this;
        }

        public Criteria andNameEqualTo(String value) {
            addCriterion("name =", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotEqualTo(String value) {
            addCriterion("name <>", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameGreaterThan(String value) {
            addCriterion("name >", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameGreaterThanOrEqualTo(String value) {
            addCriterion("name >=", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameLessThan(String value) {
            addCriterion("name <", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameLessThanOrEqualTo(String value) {
            addCriterion("name <=", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameLike(String value) {
            addCriterion("name like", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotLike(String value) {
            addCriterion("name not like", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameIn(List<String> values) {
            addCriterion("name in", values, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotIn(List<String> values) {
            addCriterion("name not in", values, "name");
            return (Criteria) this;
        }

        public Criteria andNameBetween(String value1, String value2) {
            addCriterion("name between", value1, value2, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotBetween(String value1, String value2) {
            addCriterion("name not between", value1, value2, "name");
            return (Criteria) this;
        }

        public Criteria andTourdescribeIsNull() {
            addCriterion("tourDescribe is null");
            return (Criteria) this;
        }

        public Criteria andTourdescribeIsNotNull() {
            addCriterion("tourDescribe is not null");
            return (Criteria) this;
        }

        public Criteria andTourdescribeEqualTo(String value) {
            addCriterion("tourDescribe =", value, "tourdescribe");
            return (Criteria) this;
        }

        public Criteria andTourdescribeNotEqualTo(String value) {
            addCriterion("tourDescribe <>", value, "tourdescribe");
            return (Criteria) this;
        }

        public Criteria andTourdescribeGreaterThan(String value) {
            addCriterion("tourDescribe >", value, "tourdescribe");
            return (Criteria) this;
        }

        public Criteria andTourdescribeGreaterThanOrEqualTo(String value) {
            addCriterion("tourDescribe >=", value, "tourdescribe");
            return (Criteria) this;
        }

        public Criteria andTourdescribeLessThan(String value) {
            addCriterion("tourDescribe <", value, "tourdescribe");
            return (Criteria) this;
        }

        public Criteria andTourdescribeLessThanOrEqualTo(String value) {
            addCriterion("tourDescribe <=", value, "tourdescribe");
            return (Criteria) this;
        }

        public Criteria andTourdescribeLike(String value) {
            addCriterion("tourDescribe like", value, "tourdescribe");
            return (Criteria) this;
        }

        public Criteria andTourdescribeNotLike(String value) {
            addCriterion("tourDescribe not like", value, "tourdescribe");
            return (Criteria) this;
        }

        public Criteria andTourdescribeIn(List<String> values) {
            addCriterion("tourDescribe in", values, "tourdescribe");
            return (Criteria) this;
        }

        public Criteria andTourdescribeNotIn(List<String> values) {
            addCriterion("tourDescribe not in", values, "tourdescribe");
            return (Criteria) this;
        }

        public Criteria andTourdescribeBetween(String value1, String value2) {
            addCriterion("tourDescribe between", value1, value2, "tourdescribe");
            return (Criteria) this;
        }

        public Criteria andTourdescribeNotBetween(String value1, String value2) {
            addCriterion("tourDescribe not between", value1, value2, "tourdescribe");
            return (Criteria) this;
        }

        public Criteria andPriceIsNull() {
            addCriterion("price is null");
            return (Criteria) this;
        }

        public Criteria andPriceIsNotNull() {
            addCriterion("price is not null");
            return (Criteria) this;
        }

        public Criteria andPriceEqualTo(Double value) {
            addCriterion("price =", value, "price");
            return (Criteria) this;
        }

        public Criteria andPriceNotEqualTo(Double value) {
            addCriterion("price <>", value, "price");
            return (Criteria) this;
        }

        public Criteria andPriceGreaterThan(Double value) {
            addCriterion("price >", value, "price");
            return (Criteria) this;
        }

        public Criteria andPriceGreaterThanOrEqualTo(Double value) {
            addCriterion("price >=", value, "price");
            return (Criteria) this;
        }

        public Criteria andPriceLessThan(Double value) {
            addCriterion("price <", value, "price");
            return (Criteria) this;
        }

        public Criteria andPriceLessThanOrEqualTo(Double value) {
            addCriterion("price <=", value, "price");
            return (Criteria) this;
        }

        public Criteria andPriceIn(List<Double> values) {
            addCriterion("price in", values, "price");
            return (Criteria) this;
        }

        public Criteria andPriceNotIn(List<Double> values) {
            addCriterion("price not in", values, "price");
            return (Criteria) this;
        }

        public Criteria andPriceBetween(Double value1, Double value2) {
            addCriterion("price between", value1, value2, "price");
            return (Criteria) this;
        }

        public Criteria andPriceNotBetween(Double value1, Double value2) {
            addCriterion("price not between", value1, value2, "price");
            return (Criteria) this;
        }

        public Criteria andMarkIsNull() {
            addCriterion("mark is null");
            return (Criteria) this;
        }

        public Criteria andMarkIsNotNull() {
            addCriterion("mark is not null");
            return (Criteria) this;
        }

        public Criteria andMarkEqualTo(Double value) {
            addCriterion("mark =", value, "mark");
            return (Criteria) this;
        }

        public Criteria andMarkNotEqualTo(Double value) {
            addCriterion("mark <>", value, "mark");
            return (Criteria) this;
        }

        public Criteria andMarkGreaterThan(Double value) {
            addCriterion("mark >", value, "mark");
            return (Criteria) this;
        }

        public Criteria andMarkGreaterThanOrEqualTo(Double value) {
            addCriterion("mark >=", value, "mark");
            return (Criteria) this;
        }

        public Criteria andMarkLessThan(Double value) {
            addCriterion("mark <", value, "mark");
            return (Criteria) this;
        }

        public Criteria andMarkLessThanOrEqualTo(Double value) {
            addCriterion("mark <=", value, "mark");
            return (Criteria) this;
        }

        public Criteria andMarkIn(List<Double> values) {
            addCriterion("mark in", values, "mark");
            return (Criteria) this;
        }

        public Criteria andMarkNotIn(List<Double> values) {
            addCriterion("mark not in", values, "mark");
            return (Criteria) this;
        }

        public Criteria andMarkBetween(Double value1, Double value2) {
            addCriterion("mark between", value1, value2, "mark");
            return (Criteria) this;
        }

        public Criteria andMarkNotBetween(Double value1, Double value2) {
            addCriterion("mark not between", value1, value2, "mark");
            return (Criteria) this;
        }

        public Criteria andPicpathIsNull() {
            addCriterion("picPath is null");
            return (Criteria) this;
        }

        public Criteria andPicpathIsNotNull() {
            addCriterion("picPath is not null");
            return (Criteria) this;
        }

        public Criteria andPicpathEqualTo(String value) {
            addCriterion("picPath =", value, "picpath");
            return (Criteria) this;
        }

        public Criteria andPicpathNotEqualTo(String value) {
            addCriterion("picPath <>", value, "picpath");
            return (Criteria) this;
        }

        public Criteria andPicpathGreaterThan(String value) {
            addCriterion("picPath >", value, "picpath");
            return (Criteria) this;
        }

        public Criteria andPicpathGreaterThanOrEqualTo(String value) {
            addCriterion("picPath >=", value, "picpath");
            return (Criteria) this;
        }

        public Criteria andPicpathLessThan(String value) {
            addCriterion("picPath <", value, "picpath");
            return (Criteria) this;
        }

        public Criteria andPicpathLessThanOrEqualTo(String value) {
            addCriterion("picPath <=", value, "picpath");
            return (Criteria) this;
        }

        public Criteria andPicpathLike(String value) {
            addCriterion("picPath like", value, "picpath");
            return (Criteria) this;
        }

        public Criteria andPicpathNotLike(String value) {
            addCriterion("picPath not like", value, "picpath");
            return (Criteria) this;
        }

        public Criteria andPicpathIn(List<String> values) {
            addCriterion("picPath in", values, "picpath");
            return (Criteria) this;
        }

        public Criteria andPicpathNotIn(List<String> values) {
            addCriterion("picPath not in", values, "picpath");
            return (Criteria) this;
        }

        public Criteria andPicpathBetween(String value1, String value2) {
            addCriterion("picPath between", value1, value2, "picpath");
            return (Criteria) this;
        }

        public Criteria andPicpathNotBetween(String value1, String value2) {
            addCriterion("picPath not between", value1, value2, "picpath");
            return (Criteria) this;
        }

        public Criteria andPicpath2IsNull() {
            addCriterion("picPath2 is null");
            return (Criteria) this;
        }

        public Criteria andPicpath2IsNotNull() {
            addCriterion("picPath2 is not null");
            return (Criteria) this;
        }

        public Criteria andPicpath2EqualTo(String value) {
            addCriterion("picPath2 =", value, "picpath2");
            return (Criteria) this;
        }

        public Criteria andPicpath2NotEqualTo(String value) {
            addCriterion("picPath2 <>", value, "picpath2");
            return (Criteria) this;
        }

        public Criteria andPicpath2GreaterThan(String value) {
            addCriterion("picPath2 >", value, "picpath2");
            return (Criteria) this;
        }

        public Criteria andPicpath2GreaterThanOrEqualTo(String value) {
            addCriterion("picPath2 >=", value, "picpath2");
            return (Criteria) this;
        }

        public Criteria andPicpath2LessThan(String value) {
            addCriterion("picPath2 <", value, "picpath2");
            return (Criteria) this;
        }

        public Criteria andPicpath2LessThanOrEqualTo(String value) {
            addCriterion("picPath2 <=", value, "picpath2");
            return (Criteria) this;
        }

        public Criteria andPicpath2Like(String value) {
            addCriterion("picPath2 like", value, "picpath2");
            return (Criteria) this;
        }

        public Criteria andPicpath2NotLike(String value) {
            addCriterion("picPath2 not like", value, "picpath2");
            return (Criteria) this;
        }

        public Criteria andPicpath2In(List<String> values) {
            addCriterion("picPath2 in", values, "picpath2");
            return (Criteria) this;
        }

        public Criteria andPicpath2NotIn(List<String> values) {
            addCriterion("picPath2 not in", values, "picpath2");
            return (Criteria) this;
        }

        public Criteria andPicpath2Between(String value1, String value2) {
            addCriterion("picPath2 between", value1, value2, "picpath2");
            return (Criteria) this;
        }

        public Criteria andPicpath2NotBetween(String value1, String value2) {
            addCriterion("picPath2 not between", value1, value2, "picpath2");
            return (Criteria) this;
        }

        public Criteria andReviewsIsNull() {
            addCriterion("reviews is null");
            return (Criteria) this;
        }

        public Criteria andReviewsIsNotNull() {
            addCriterion("reviews is not null");
            return (Criteria) this;
        }

        public Criteria andReviewsEqualTo(Integer value) {
            addCriterion("reviews =", value, "reviews");
            return (Criteria) this;
        }

        public Criteria andReviewsNotEqualTo(Integer value) {
            addCriterion("reviews <>", value, "reviews");
            return (Criteria) this;
        }

        public Criteria andReviewsGreaterThan(Integer value) {
            addCriterion("reviews >", value, "reviews");
            return (Criteria) this;
        }

        public Criteria andReviewsGreaterThanOrEqualTo(Integer value) {
            addCriterion("reviews >=", value, "reviews");
            return (Criteria) this;
        }

        public Criteria andReviewsLessThan(Integer value) {
            addCriterion("reviews <", value, "reviews");
            return (Criteria) this;
        }

        public Criteria andReviewsLessThanOrEqualTo(Integer value) {
            addCriterion("reviews <=", value, "reviews");
            return (Criteria) this;
        }

        public Criteria andReviewsIn(List<Integer> values) {
            addCriterion("reviews in", values, "reviews");
            return (Criteria) this;
        }

        public Criteria andReviewsNotIn(List<Integer> values) {
            addCriterion("reviews not in", values, "reviews");
            return (Criteria) this;
        }

        public Criteria andReviewsBetween(Integer value1, Integer value2) {
            addCriterion("reviews between", value1, value2, "reviews");
            return (Criteria) this;
        }

        public Criteria andReviewsNotBetween(Integer value1, Integer value2) {
            addCriterion("reviews not between", value1, value2, "reviews");
            return (Criteria) this;
        }

        public Criteria andCityIsNull() {
            addCriterion("city is null");
            return (Criteria) this;
        }

        public Criteria andCityIsNotNull() {
            addCriterion("city is not null");
            return (Criteria) this;
        }

        public Criteria andCityEqualTo(String value) {
            addCriterion("city =", value, "city");
            return (Criteria) this;
        }

        public Criteria andCityNotEqualTo(String value) {
            addCriterion("city <>", value, "city");
            return (Criteria) this;
        }

        public Criteria andCityGreaterThan(String value) {
            addCriterion("city >", value, "city");
            return (Criteria) this;
        }

        public Criteria andCityGreaterThanOrEqualTo(String value) {
            addCriterion("city >=", value, "city");
            return (Criteria) this;
        }

        public Criteria andCityLessThan(String value) {
            addCriterion("city <", value, "city");
            return (Criteria) this;
        }

        public Criteria andCityLessThanOrEqualTo(String value) {
            addCriterion("city <=", value, "city");
            return (Criteria) this;
        }

        public Criteria andCityLike(String value) {
            addCriterion("city like", value, "city");
            return (Criteria) this;
        }

        public Criteria andCityNotLike(String value) {
            addCriterion("city not like", value, "city");
            return (Criteria) this;
        }

        public Criteria andCityIn(List<String> values) {
            addCriterion("city in", values, "city");
            return (Criteria) this;
        }

        public Criteria andCityNotIn(List<String> values) {
            addCriterion("city not in", values, "city");
            return (Criteria) this;
        }

        public Criteria andCityBetween(String value1, String value2) {
            addCriterion("city between", value1, value2, "city");
            return (Criteria) this;
        }

        public Criteria andCityNotBetween(String value1, String value2) {
            addCriterion("city not between", value1, value2, "city");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table tour
     *
     * @mbg.generated do_not_delete_during_merge Fri Aug 07 22:45:15 CST 2020
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table tour
     *
     * @mbg.generated Fri Aug 07 22:45:15 CST 2020
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}